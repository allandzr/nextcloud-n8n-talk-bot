<?php

declare(strict_types=1);

/**
 * SPDX-FileCopyrightText: 2025 Your Name
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */

namespace OCA\N8nTalkBot\Bot;

use OCA\N8nTalkBot\Service\BotConfigService;
use Psr\Log\LoggerInterface;

class CommandHandler {
	public function __construct(
		private BotConfigService $configService,
		private LoggerInterface $logger
	) {}

	/**
	 * Handle a bot command
	 */
	public function handleCommand(string $command, array $messageData = []): ?string {
		$parts = explode(' ', trim($command));
		$cmd = strtolower($parts[0]);
		$args = array_slice($parts, 1);

		// Extract user info from message data if available
		$userName = 'User';
		if (isset($messageData['actor']['name'])) {
			$userName = $messageData['actor']['name'];
		}

		return match ($cmd) {
			'about', '–æ –±–æ—Ç–µ' => $this->handleAbout(),
			default => $this->handleUnknownCommand($cmd),
		};
	}

	private function handleAbout(): string {
		$name = $this->configService->getBotName();
		$description = $this->configService->getBotDescription();
		$enabled = $this->configService->isBotEnabled();
		$prefix = $this->configService->getCommandPrefix();
		$n8nEnabled = $this->configService->isN8nIntegrationEnabled();
		$n8nUrl = $this->configService->getN8nWebhookUrl();
		
		$config = "**ü§ñ –û –±–æ—Ç–µ {$name}:**\n\n" .
			"{$description}\n\n" .
			"**–í–µ—Ä—Å–∏—è:** 1.0.0\n" .
			"**–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:** Nextcloud Talk\n" .
			"**–°–æ–∑–¥–∞–Ω –¥–ª—è:** —É–ª—É—á—à–µ–Ω–∏—è –æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–∞—Ö! üí¨\n\n" .
			"**üìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞:**\n" .
			"‚Ä¢ **–ù–∞–∑–≤–∞–Ω–∏–µ:** {$name}\n" .
			"‚Ä¢ **–ü—Ä–µ—Ñ–∏–∫—Å –∫–æ–º–∞–Ω–¥:** `{$prefix}`\n" .
			"‚Ä¢ **–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:** " . ($enabled ? '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω') . "\n" .
			"‚Ä¢ **n8n –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:** " . ($n8nEnabled ? '‚úÖ –í–∫–ª—é—á–µ–Ω–∞' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∞') . "\n";
		
		if ($n8nEnabled && !empty($n8nUrl)) {
			$config .= "‚Ä¢ **n8n Webhook URL:** `{$n8nUrl}`\n";
		}
		
		$config .= "‚Ä¢ **–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:** " . date('H:i:s d.m.Y');
		
		return $config;
	}

	private function handleUnknownCommand(string $cmd): string {
		$prefix = $this->configService->getCommandPrefix();
		return "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: `{$cmd}`\n" .
			"–î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥–∞ `{$prefix}about` –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ.";
	}
} 